version: "3"
services:
  app:
      build: ./app
      command: gunicorn -w 4 --bind 0.0.0.0:5000 app:app 
      #command: python app.py run -h 0.0.0.0:5000
      volumes:
        - ./app/:/user/src/app/
      expose:
        - 5000
      ports:
        - 5000:5000
      depends_on:
        - db
      links:
        - db
      restart: unless-stopped
      healthcheck:
        test: ["CMD", "curl", "-f", "http://localhost:5000"]
        interval: 1m30s
        timeout: 10s
        retries: 3
      networks:
        - frontend
        - backend

  db:
    image: mysql:5.7
    ports:
      - 3000:3306
    env_file:
      - ./.env.prod.db
    # environment:
    #   MYSQL_ROOT_PASSWORD: root
    #   MYSQL_USER: newuser 
    #   MYSQL_PASSWORD: newpassword
    #   MYSQL_DATABASE: classicmodels
    expose:
      # Opens port 3306 on the container
      - 3306
    volumes:
      - ./db:/docker-entrypoint-initdb.d/:ro
      - .:/app
    healthcheck:
      test: ["CMD","nc","-z","-v","http://localhost:3306"]
      interval: 1m30s
      timeout: 10s
      retries: 3
    networks:
      - backend

  server:
        image: nginx:alpine
        restart: unless-stopped
        volumes:
            - ./nginx/nginx.conf:/etc/nginx/nginx.conf
        ports:
            - 80:80
            - 443:443
        depends_on:
            - app
        networks:
            - frontend
      
networks:
  frontend:
    driver: bridge
  backend:
    driver: bridge

volumes:
  db:
    driver: local
  app:
    driver: local
  server:
    driver: local
